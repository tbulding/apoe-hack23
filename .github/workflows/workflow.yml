name: codeguru-reviewer-workflow

on: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  
  build:
    # The type of runner the job will run on
    runs-on: [self-hosted]

    # Steps represent a sequence of tasks that will ve executed as part of the job
    steps:
      # Checks-out your repository so your job can access it
      - name: Step 1 - Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # This is a required field for CodeGuru
      # Configure aws credentials to access the repo
      - name: Step 2 - Configure AWS Credentials
        # if: ${{ always() }} #  This ensures that your workflow runs successfully
        uses: aws-actions/configure-aws-credentials@v3
        with:
          # role-to-assume: arn:aws:iam::503759272940:role/ephemeral/ephemeral-runner-role
          aws-region: us-east-1
      # Run CodeGuru Reviewer
      - name: Step 3 - CodeGuru Reviewer
        uses: aws-actions/codeguru-reviewer@v1.1
        # if: ${{ always() }}
        with:
          build_path: target # build artifact(s) directory
          s3_bucket: codeguru-reviewer-apoe-hack23 # S3 Bucket with "codeguru-reviewer-*" prefix
      # Upload results to GitHub
      - name: Step 4 - Upload review result
        if: ${{ github.event_name != 'push' }}
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: codeguru-results.sarif.json # Your results file will be named codeguru-results.sarif.json
      # # Run CodeGuru Security
      - name: Step 5 - CodeGuru Security
        uses: aws-actions/codeguru-security@v1
        with:
          source_path: .
          aws_region: us-east-1
          fail_on_severity: Critical
      # Upload results to GitHub
      - name: Step 6 - Upload result
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: codeguru-security-results.sarif.json
